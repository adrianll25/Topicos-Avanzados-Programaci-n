/* -----------------------------------------------------------------------------
                       INSTITUTO TECNOLOGICO DE LA LAGUNA
                     INGENIERIA EN SISTEMAS COMPUTACIONALES
                       TOPICOS AVANZADOS DE PROGRAMACION "B"

                   SEMESTRE: ENE-JUN/2020   HORA: 10-11 HRS

                             JFrame Globos


  Archivo     : GlobosFrame.java
  Autor       : jesus Adrian Lopez Luevanos 18131253
  Fecha       : 15/01/2021
  Compilador  : Java j2SE V1.8.0
  Descripci√≥n : JFrame donde se visualizan 10 Threads ( HILOS ), que simulan
                ser globos dedistinto colores que se inflan y desinflan, 
                se ejecutan en un contexto grafico.

--------------------------------------------------------------------------------
Ultima Modificacion: 
Fecha: 
Modifico: 
Motivo: 
*/

package app.Globos;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;

//------------------------------------------------------------------------------
public class GlobosFrame extends javax.swing.JFrame {
    
//------------------------------------------------------------------------------
    //Definicion de numeros de globos
    public static final int MAX_GLOBO = 10;

//------------------------------------------------------------------------------    
    private  Globo [] globos  = new Globo [ MAX_GLOBO ];

//------------------------------------------------------------------------------    
    //Asignacion de los colores que puedan llevar los globos
    private  Color [] colores = new Color []{
        Color.BLACK, Color.BLUE, Color.CYAN, Color.GRAY, Color.GREEN,
        Color.MAGENTA, Color.PINK, Color.RED, Color.YELLOW, Color.cyan };
    
//------------------------------------------------------------------------------    
    
    private int ancho;
    private int alto ;    

//------------------------------------------------------------------------------    
    
    private Image image;
    private Graphics grpImage;
    
//------------------------------------------------------------------------------       
    public GlobosFrame() {
        initComponents();

//------------------------------------------------------------------------------        
      
        ancho = this.getWidth ();
        alto  = this.getHeight();

//------------------------------------------------------------------------------        
    
        for ( int i = 0; i < MAX_GLOBO; i++ ){
//------------------------------------------------------------------------------
          
            Color color  = colores [ ( int ) ( Math.random() * 8 ) ];
//------------------------------------------------------------------------------
          
            int   radio  = 5     +   ( int ) ( Math.random() * alto * 0.2 );
            int   sleep  = 10    +   ( int ) ( Math.random() * 40 );
            int   x      = radio +   ( int ) ( Math.random() * ( ancho - radio * 2 ) );
            int   y      = radio +   ( int ) ( Math.random() * ( alto  - radio * 2 ) );
            
//------------------------------------------------------------------------------
            globos [ i ] = new Globo ( this, color, radio, sleep, x, y );
            globos [ i ].start();
            
            
        }
    }
    
//------------------------------------------------------------------------------   
    @Override
    //Metodo para dibujar la imagen
    public void paint ( Graphics g ) {
            
          if ( image == null ){
               image    = this.createImage( ancho, alto );
               grpImage = image.getGraphics();
              
          }
               grpImage.setColor( Color.WHITE );
               grpImage.fillRect( 0, 0, ancho, alto);
          
          for ( int i = 0; i < MAX_GLOBO; i++){
              globos [ i ].dibujar ( grpImage );
              
          }
          
          g.drawImage( image, 0, 0, null );
    }

//------------------------------------------------------------------------------

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Globos");

        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 523, Short.MAX_VALUE)
                .addComponent(jButton1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 449, Short.MAX_VALUE)
                .addComponent(jButton1))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose ();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GlobosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GlobosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GlobosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GlobosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GlobosFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables

}
